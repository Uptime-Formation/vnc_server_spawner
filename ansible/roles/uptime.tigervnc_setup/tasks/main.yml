- name: Ensure some utils are present
  apt:
    name:
      - htop
      - vim

- name: Ensure xubuntu-desktop is present
  apt:
    name:
      - xubuntu-desktop

- name: Ensure tigervnc server and plugins are present
  apt:
    name:
      - tigervnc-standalone-server
      - tigervnc-xorg-extension
      - tigervnc-common # install 'vncpasswd' cli util

- name: Ensure home vnc dir present
  file:
    path: /home/{{ vnc_unix_user }}/.vnc
    state: directory
    owner: "{{ vnc_unix_user }}"
  tags: vnc_passwd


- name: Ensure password is configured
  # with vncpasswd -f the password has to end with \n
  # moreover to generate a view password concat a second binary passwd to the first one
  shell: echo '{{ vnc_passwd_newline }}' | vncpasswd -f > /home/{{ vnc_unix_user }}/.vnc/passwd
  args:
    creates: /home/{{ vnc_unix_user }}/.vnc/passwd
  become: yes
  become_user: "{{ vnc_unix_user }}"
  tags: vnc_passwd

- name: Ensure some view only password is configured
  # moreover to generate a view only password concat a second binary passwd to the first one
  shell: >
    echo '{{ vnc_view_passwd_newline }}' | vncpasswd -f  >> /home/{{ vnc_unix_user }}/.vnc/passwd
    && touch /home/{{ vnc_unix_user }}/.vnc/viewpass_ansible_indempotency_flag
  args:
    creates: /home/{{ vnc_unix_user }}/.vnc/viewpass_ansible_indempotency_flag
  become: yes
  become_user: "{{ vnc_unix_user }}"
  tags: vnc_passwd
  when: vnc_view_passwd_newline is defined

- name: Ensure xstartup config exist
  template:
    src: xstartup.j2
    dest: /home/{{ vnc_unix_user }}/.vnc/xstartup
  become: yes
  become_user: "{{ vnc_unix_user }}"

- name: Ensure vncserver service exist
  template:
    src: vncserver.service.j2
    dest: /etc/systemd/system/vncserver@.service

- name: Ensure vncserver service is enabled and started on screen :1 and port 5901
  systemd:
    name: vncserver@:1
    state: started
    daemon_reload: yes
    enabled: yes
