- name: Ensure git package is present
  apt:
    name: git
    state: present

- name: Ensure docker repo present
  git:
    dest: "{{ guac_path }}"
    repo: https://github.com/Uptime-Formation/guacamole-docker-compose.git # required. git, SSH, or HTTP(S) protocol address of the git repository.
    update: no
  tags: guac_install
  register: guac_code

- name: Ensure vnc servers are configured
  template:
    dest: "{{ guac_path }}/docker-compose.yml" # required. Location to render the template to on the remote machine.
    src: docker-compose.yml.j2
  tags: guac_install
  register: docker_code

- name: Prepare guacamole server
  command: ./prepare.sh
  args:
    chdir: "{{ guac_path }}"
    creates: "./init/initdb.sql"
  tags: guac_install

- name: Ensure vnc servers are declared in user configuration
  template:
    # /etc/guacamole in the guacamole docker container
    dest: "{{ guac_path }}/user-mapping.xml"
    src: user-mapping.xml.j2
  when: guac_vnc_servers_autoconfig
  tags: guacamole_config
  notify:
    - Restart Guacamole

- name: Ensure nginx nginx_vhosts dir is created
  file:
    path: "/nginx_vhosts"
    state: directory
  tags: guacamole_config

- name: Ensure nginx default_locations file is copied
  template:
    src: nginx.conf.j2
    dest: "/nginx_vhosts/{{ guacamole_domain }}_locations"
  tags: guacamole_config
  notify:
    - Restart guacamole nginx

# FIXME: correct hierarchy + don't push selfsigned or outdated
# - name: Push cert files from local path if they exist
#   ansible.posix.synchronize:
#     src: "{{ playbook_dir }}/../stored_certs/"
#     dest: "/nginx_certs/"
#     mode: push
#     recursive: yes
#     delete: no
#     times: yes

- name: Ensure docker-compose guacamole is started
  docker_compose:
    project_src: "{{ guac_path }}"
    restarted: yes
    recreate: always
    state: present
  register: guac_compose

# - name: Check if nginx-proxy is healthy
#   docker_container_info:
#     name: nginx-proxy
#   register: result

# - name: Print information about container nginx-proxy
#   debug:
#     var: result.container.State.Health.Status == "healthy"
#   when: result.exists

- name: Wait until one cert file is present before continuing
  wait_for:
    path: /nginx_certs/{{ guacamole_domain }}/fullchain.pem
# FIXME: creates stored_certs/stored_certs/ hierarchy
- name: Export cert files to local path
  # - name: Synchronization of src on the inventory host to the dest on the localhost in pull mode
  ansible.posix.synchronize:
    mode: pull
    src: /nginx_certs/
    dest: "{{ playbook_dir }}/../stored_certs/"
    delete: no
    recursive: yes
    times: yes
