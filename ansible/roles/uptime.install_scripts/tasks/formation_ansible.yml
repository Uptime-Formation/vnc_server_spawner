# - name: Ensure we have Ansible installed
#   apt:
#     name: ansible
#     state: present
#   tags: ["formation_ansible"]

# - name: Ensure we have LXD "{{ lxd_state }}"
#   snap:
#     name: lxd
#     state: "{{ lxd_state }}"
#   tags: ["formation_ansible"]

- name: initialize git
  git_config:
    name: user.name
    value: "{{ base_unix_user }}"
    scope: global

- name: initialize git
  git_config:
    name: user.email
    value: "{{ base_unix_user }}@formati.on"
    scope: global


- name: template ansible lxd teaching install script
  template:
    src: "{{ item }}"
    dest: /opt/{{ item }}
    mode: 0777
  loop:
    - lxd_config.yaml
    - lxd.sh

- name: Ensure /.ssh/ folder exists
  file:
    path: /home/{{ item }}/.ssh
    owner: "{{ item }}"
    group: "{{ item }}"
    state: directory
  tags: ["formation_ansible"]
  loop:
  - root
  - "{{ base_unix_user }}"

- name: Ensure unix user has the stagiaire ssh key
  template:
    src: "{{ item }}"
    dest: /home/{{ base_unix_user }}/.ssh/{{ item }}
    owner: "{{ base_unix_user }}"
    group: "{{ base_unix_user }}"
    mode: 0600
  tags: ["formation_ansible"]
  loop:
    - id_ed25519
    - id_ed25519.pub


- name: Ensure root user has the stagiaire ssh key
  template:
    src: "{{ item }}"
    dest: "/root/.ssh/{{ item }}"
    owner: "root"
    group: "root"
    mode: 0600
  tags: ["formation_ansible"]
  loop:
    - id_ed25519
    - id_ed25519.pub

# - name: Ensure ssh-agent is started in bashrc
#   lineinfile:
#     path: /home/{{ base_unix_user }}/.bashrc
#     line: eval $(ssh-agent)
#   tags: ["formation_ansible"]
  
- name: Add pip to path
  lineinfile:
    path: "/home/{{ base_unix_user }}/.bashrc"
    line: 'export PATH=$PATH:/home/{{ base_unix_user }}/.local/bin'
  tags: ["formation_ansible"]

  # Error: The image used by this instance requires a CGroupV1 host system
- name: Fix boot config for CentOS
  lineinfile:
    path: /etc/default/grub
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT="
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="consoleblank=0 systemd.show_status=true console=tty1 console=ttyS0 systemd.unified_cgroup_hierarchy=false"'
  register: grub_edit
  tags: ["formation_ansible"]

- name: Update grub
  command:
    cmd: "update-grub"
  become: true
  when: grub_edit.changed
  tags: ["formation_ansible", "update-grub"]

- name: Restart if grub changed
  reboot:
  when: grub_edit.changed

  # TODO: wait for

- name: Exec lxd script
  shell: bash /opt/lxd.sh
  become: true
  tags: ["formation_ansible"]
# mkdir -p /etc/apt/keyrings/
# curl -fsSL https://pkgs.zabbly.com/key.asc -o /etc/apt/keyrings/zabbly.asc

# sh -c 'cat <<EOF > /etc/apt/sources.list.d/zabbly-incus-daily.sources
# Enabled: yes
# Types: deb
# URIs: https://pkgs.zabbly.com/incus/daily
# Suites: $(. /etc/os-release && echo ${VERSION_CODENAME})
# Components: main
# Architectures: $(dpkg --print-architecture)
# Signed-By: /etc/apt/keyrings/zabbly.asc

# EOF'

# sudo apt update
# sudo apt install -y incus

# cat /opt/lxd_config.yaml | incus admin init --preseed

# set +eux

# # incus launch images:centos/7/amd64 centos1 
# sudo incus launch images:ubuntu/focal/amd64 ubu1

# sleep 5 # wait for the network to boot in containers

# set -eux

# # incus exec centos1 -- yum update -y
# # incus exec centos1 -- yum install -y openssh-server sudo
# # incus exec centos1 -- systemctl start sshd
# # incus exec centos1 -- sed -i 's@\(%wheel.*\)ALL@\1 NOPASSWD: ALL@' /etc/sudoers

# set +eux

# # incus exec centos1 -- useradd -m -s /bin/bash -G wheel stagiaire
# set -eux
# # incus exec centos1 -- bash -c "(echo 'devops101'; echo 'devops101') | passwd stagiaire --force"
# # sshpass -p "devops101" ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519.pub stagiaire@$(incus list -c4 --format csv centos1 | cut -d' ' -f1)
# # ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519.pub stagiaire@$(incus list -c4 --format csv centos1 | cut -d' ' -f1)
# # incus publish --force --alias centos_ansible centos1 && incus delete --force centos1

# sudo incus exec ubu1 -- apt update
# sudo incus exec ubu1 -- apt install -y openssh-server sudo
# sudo incus exec ubu1 -- sed -i 's@\(%sudo.*\)ALL@\1 NOPASSWD: ALL@' /etc/sudoers
# set +eux
# sudo incus exec ubu1 -- useradd -m -s /bin/bash -G sudo stagiaire
# set -eux
# sudo incus exec ubu1 -- bash -c "(echo 'devops101'; echo 'devops101') | passwd stagiaire"
# ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519.pub stagiaire@$(sudo incus list -c4 --format csv ubu1 | cut -d' ' -f1)
# # sshpass -p "devops101" ssh-copy-id -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519.pub stagiaire@$(incus list -c4 --format csv ubu1 | cut -d' ' -f1)
# sudo incus publish --force --alias ubuntu_ansible ubu1


  # FIXME: not idempotent

# FIXME: not installed yet
- name: Ensure unix user is in the incus-admin group
  user:
    name: "{{ base_unix_user }}"
    state: present
    groups: ["incus-admin"]
    append: yes
  notify: Restart vncserver
  tags: ["formation_ansible", "incus-admin"]
